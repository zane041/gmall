<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.atguigu.gmall.product.mapper.BaseAttrInfoMapper">

    <!-- 结果集配置 -->
    <!-- automapping 有一点要注意：字段名不能重复，所以下面重复的名字id需要另外设置 -->
    <resultMap id="BaseAttrInfoMap" type="com.atguigu.gmall.model.product.BaseAttrInfo" autoMapping="true">
        <!--这个id不能省去，如果省去会发现查询出来1对多被封装成多个BaseAttrInfo，我们希望是1个BaseAttrInfo里有多个BaseAttrValue，所以这个id不能省-->
        <id property="id" column="id"/>
        <collection property="attrValueList" ofType="com.atguigu.gmall.model.product.BaseAttrValue" autoMapping="true">
            <id property="id" column="value_id"/>
        </collection>
    </resultMap>

    <select id="selectBaseAttrInfoList" resultMap="BaseAttrInfoMap">
        select
        bai.id,
        bai.attr_name,
        bai.category_id,
        bai.category_level,
        bav.id value_id,
        bav.value_name
        from base_attr_info bai
        inner join base_attr_value bav
            on bai.id = bav.attr_id
        <where>
            <trim prefix="(" suffix=")">
                <if test="category1Id != null and category1Id > 0">
                    bai.category_id = #{category1Id} and bai.category_level = 1
                </if>
                <if test="category2Id != null and category2Id > 0">
                    or bai.category_id = #{category2Id} and bai.category_level = 2
                </if>
                <if test="category3Id != null and category3Id > 0">
                    or bai.category_id = #{category3Id} and bai.category_level = 3
                </if>
            </trim>
        </where>
        and bai.is_deleted = 0
        and bav.is_deleted = 0
        order by bai.id, bav.id
    </select>
</mapper>
